# Sonof iFan03 controller in spare room
#
substitutions:
  device_id: spare_room_ceiling
  device_name: Spare Room Ceiling
  static_ip: 192.168.10.32
  log_level: info

esphome:
  name: $device_id
  platform: ESP8266
  board: esp8285
  includes:
    - "common/ifan03/ifan03.h"
  on_boot:
    priority: 225
    # turn off the light as early as possible
    then:
      - light.turn_off: ${device_id}_light

<<: !include common/common.yaml

# Use an ESPHome custom output
output:
  - platform: custom
    type: float
    outputs:
      id: fan_output
    lambda: |-
      auto fan = new IFan03Output();
      App.register_component(fan);
      return {fan};

  - platform: gpio
    pin: GPIO9
    id: light_output

light:
  - platform: binary
    id: ${device_id}_light
    name: "${device_name} Light"
    output: light_output

fan:
  - platform: speed
    id: ${device_id}_fan
    name: "${device_name} Fan"
    output: fan_output

switch:
  - platform: template
    id: update_fan_speed
    optimistic: true
    turn_on_action:
      then:
        - delay: 200ms
        - if:
            condition:
              and:
                - switch.is_off: fan_relay_low
                - switch.is_off: fan_relay_med
                - switch.is_off: fan_relay_high
            then:
              - fan.turn_off: ${device_id}_fan
        - if:
            condition:
              and:
                - switch.is_on: fan_relay_low
                - switch.is_off: fan_relay_med
                - switch.is_off: fan_relay_high
            then:
              - fan.turn_on:
                  id: ${device_id}_fan
                  speed: LOW
        - if:
            condition:
              and:
                - switch.is_on: fan_relay_low
                - switch.is_on: fan_relay_med
                - switch.is_off: fan_relay_high
            then:
              - fan.turn_on:
                  id: ${device_id}_fan
                  speed: MEDIUM
        - if:
            condition:
              and:
                - switch.is_on: fan_relay_low
                - switch.is_off: fan_relay_med
                - switch.is_on: fan_relay_high
            then:
              - fan.turn_on:
                  id: ${device_id}_fan
                  speed: HIGH
        - switch.turn_off: update_fan_speed

  - platform: gpio
    id: fan_relay_low
    pin: GPIO14

  - platform: gpio
    id: fan_relay_med
    pin: GPIO12

  - platform: gpio
    id: fan_relay_high
    pin: GPIO15

#
# RF remote control support
#
remote_receiver:
  pin: GPIO3
  dump: raw

binary_sensor:
  - platform: remote_receiver
    name: "${device_name} Remote Fan Off"
    id: ${device_id}_remote_fan_off
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -104, 103, -104, 105, -102, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 104, -725, 104, -932, 104, -207, 207, -519]
    on_release:
      then:
        - fan.turn_off: ${device_id}_fan

  - platform: remote_receiver
    name: "${device_name} Remote Fan Low"
    id: ${device_id}_remote_fan_low
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 207, -104, 104, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -726, 103, -312, 103, -518, 104, -933, 103, -104, 104, -725, 104, -103, 104, -726, 103, -104, 311, -518]
    on_release:
      then:
        - fan.turn_on:
            id: ${device_id}_fan
            speed: LOW

  - platform: remote_receiver
    name: "${device_name} Remote Fan Medium"
    id: ${device_id}_remote_fan_med
    raw:
      code: [-208, 103, -104, 104, -103, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -310, 104, -518, 104, -933, 103, -104, 104, -725, 104, -207, 104, -622, 103, -416, 102, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ${device_id}_fan
            speed: MEDIUM

  - platform: remote_receiver
    name: "${device_name} Remote Fan High"
    id: ${device_id}_remote_fan_high
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -311, 104, -518, 103, -934, 103, -103, 104, -726, 103, -104, 207, -622, 104, -103, 104, -207, 104, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ${device_id}_fan
            speed: HIGH

  # top left button
  - platform: remote_receiver
    name: "${device_name} Remote Fan Light"
    id: ${device_id}_remote_light_toggle
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -103, 104, -104, 103, -104, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 103, -726, 103, -311, 104, -518, 104, -207, 104, -103, 104, -414]
    on_release:
      then:
        - light.toggle: ${device_id}_light

  # top right button
  - platform: remote_receiver
    name: "${device_name} Spare Button"
    id: ${device_id}_remote_spare_button
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 103, -104, 104, -103, 104, -103, 104, -104, 107, -721, 105, -206, 207, -518, 105, -931, 104, -104, 103, -725, 104, -104, 103, -725, 104, -104, 103, -207, 104, -414]
    on_release:
      then:
        # Just making this button toggle the light for now...
        - light.toggle: ${device_id}_light
